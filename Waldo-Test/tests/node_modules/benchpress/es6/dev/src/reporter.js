var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { bind } from 'angular2/di';
import { ABSTRACT, BaseException } from 'angular2/src/facade/lang';
/**
 * A reporter reports measure values and the valid sample.
 */
export let Reporter = class {
    static bindTo(delegateToken) {
        return [bind(Reporter).toFactory((delegate) => delegate, [delegateToken])];
    }
    reportMeasureValues(values) { throw new BaseException('NYI'); }
    reportSample(completeSample, validSample) {
        throw new BaseException('NYI');
    }
};
Reporter = __decorate([
    ABSTRACT(), 
    __metadata('design:paramtypes', [])
], Reporter);
//# sourceMappingURL=reporter.js.map